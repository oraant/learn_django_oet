# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-10-25 00:58
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mirror', '0015_auto_20161024_1209'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ora10g',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('enable', models.BooleanField(default=True)),
                ('desc', models.CharField(max_length=300)),
                ('period', models.DurationField(help_text=b'Format is like 0:01:10 for 70 seconds.')),
                ('pull', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';'", regex=b';')])),
                ('create', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#'), django.core.validators.RegexValidator(message=b"sql missed 'IF NOT EXISTS' !", regex=b'(?i)if not exists'), django.core.validators.RegexValidator(message=b"sql missed 'ENGINE = MEMORY' !", regex=b'(?i)engine.*=.*memory')])),
                ('drop', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#'), django.core.validators.RegexValidator(message=b"sql missed 'IF EXISTS' !", regex=b'(?i)if exists')])),
                ('insert', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#'), django.core.validators.RegexValidator(message=b'sql missed %s !', regex=b'\\%s')])),
                ('delete', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#')])),
            ],
            options={
                'verbose_name': "[Table Collections] Oracle 10G's table",
                'verbose_name_plural': '[Table Collections] Oracle 10G',
            },
        ),
        migrations.CreateModel(
            name='Ora11g',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('enable', models.BooleanField(default=True)),
                ('desc', models.CharField(max_length=300)),
                ('period', models.DurationField(help_text=b'Format is like 0:01:10 for 70 seconds.')),
                ('pull', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';'", regex=b';')])),
                ('create', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#'), django.core.validators.RegexValidator(message=b"sql missed 'IF NOT EXISTS' !", regex=b'(?i)if not exists'), django.core.validators.RegexValidator(message=b"sql missed 'ENGINE = MEMORY' !", regex=b'(?i)engine.*=.*memory')])),
                ('drop', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#'), django.core.validators.RegexValidator(message=b"sql missed 'IF EXISTS' !", regex=b'(?i)if exists')])),
                ('insert', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#'), django.core.validators.RegexValidator(message=b'sql missed %s !', regex=b'\\%s')])),
                ('delete', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#')])),
            ],
            options={
                'verbose_name': "[Table Collections] Oracle 11G's table",
                'verbose_name_plural': '[Table Collections] Oracle 11G',
            },
        ),
        migrations.CreateModel(
            name='Ora12c',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('enable', models.BooleanField(default=True)),
                ('desc', models.CharField(max_length=300)),
                ('period', models.DurationField(help_text=b'Format is like 0:01:10 for 70 seconds.')),
                ('pull', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';'", regex=b';')])),
                ('create', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#'), django.core.validators.RegexValidator(message=b"sql missed 'IF NOT EXISTS' !", regex=b'(?i)if not exists'), django.core.validators.RegexValidator(message=b"sql missed 'ENGINE = MEMORY' !", regex=b'(?i)engine.*=.*memory')])),
                ('drop', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#'), django.core.validators.RegexValidator(message=b"sql missed 'IF EXISTS' !", regex=b'(?i)if exists')])),
                ('insert', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#'), django.core.validators.RegexValidator(message=b'sql missed %s !', regex=b'\\%s')])),
                ('delete', models.TextField(max_length=900, validators=[django.core.validators.RegexValidator(inverse_match=True, message=b"Please Don't Input signs like ';' , '#'", regex=b';|#')])),
            ],
            options={
                'verbose_name': "[Table Collections] Oracle 12C's table",
                'verbose_name_plural': '[Table Collections] Oracle 12C',
            },
        ),
        migrations.AlterField(
            model_name='oracletarget',
            name='mysql_db',
            field=models.CharField(help_text=b'mysql database name.', max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message=b"Only allow a-z A-Z 0-9 and '_'", regex=b'^[a-zA-Z0-9_]+$')]),
        ),
        migrations.AlterField(
            model_name='oracletarget',
            name='redis_db',
            field=models.IntegerField(help_text=b'redis db number, must be unique.', unique=True),
        ),
        migrations.AlterField(
            model_name='oracletarget',
            name='table_collection',
            field=models.CharField(choices=[(b'Ora11gR2', b'[Table Collections] Oracle 11G R2'), (b'Ora10g', b'[Table Collections] Oracle 10G'), (b'Ora11g', b'[Table Collections] Oracle 11G'), (b'Ora12c', b'[Table Collections] Oracle 12C')], max_length=30),
        ),
    ]
